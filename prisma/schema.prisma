// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Images {
  id         String   @id @default(uuid()) @db.VarChar(255)
  url        String   @db.VarChar(255)
  public_id  String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  tours      Tours?

  @@map("images")
}

model Users {
  id         String   @id @default(uuid()) @db.VarChar(255)
  fullname   String   @db.VarChar(255)
  username   String   @unique @db.VarChar(255)
  password   String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  tours      Tours[]

  @@map("users")
}

model Tours {
  id          String   @id @default(uuid()) @db.VarChar(255)
  name        String   @db.VarChar(255)
  province    String   @db.VarChar(255)
  province_id String   @db.VarChar(255)
  regency     String   @db.VarChar(255)
  regency_id  String   @db.VarChar(255)
  latitude    String   @db.VarChar(255)
  longtitude  String   @db.VarChar(255)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  users       Users?   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     String?  @db.VarChar(255)
  images      Images?  @relation(fields: [image_id], references: [id], onDelete: SetNull)
  image_id    String?  @unique @db.VarChar(255)

  @@map("tours")
}
